"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.middlewareAuth = void 0;
const extension_cli_logger_1 = require("@smartsheet-bridge/extension-cli-logger");
const KeyNotFoundError_1 = require("../errors/KeyNotFoundError");
const URLNotFoundError_1 = require("../errors/URLNotFoundError");
const accountService_1 = require("../services/accountService");
const utils_1 = require("../utils");
exports.middlewareAuth = argv => {
    if (argv.alias) {
        extension_cli_logger_1.Logger.verbose('Account alias:', extension_cli_logger_1.Chalk.cyan(argv.alias));
    }
    else {
        extension_cli_logger_1.Logger.verbose('No account alias given');
    }
    const { getAccount } = accountService_1.createAccountService();
    const account = getAccount(argv.alias || 'default');
    const { url, key } = argv;
    argv.url = url || (account && account.url);
    argv.key = key || (account && account.key);
    if (typeof argv.url === 'string') {
        extension_cli_logger_1.Logger.verbose('Account url:', extension_cli_logger_1.Chalk.cyan(argv.url));
    }
    else {
        throw new URLNotFoundError_1.URLNotFoundError(argv._[0]);
    }
    if (typeof argv.key === 'string') {
        extension_cli_logger_1.Logger.verbose('Account key:', extension_cli_logger_1.Chalk.cyan(utils_1.maskKey(argv.key)));
    }
    else {
        throw new KeyNotFoundError_1.KeyNotFoundError(argv._[0]);
    }
};
//# sourceMappingURL=middlewareAuth.js.map