"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAccountCommand = void 0;
const options_1 = require("../options");
const addAccountCommand_1 = require("./accountCommands/addAccountCommand");
const listAccountCommand_1 = require("./accountCommands/listAccountCommand");
const removeAccountCommand_1 = require("./accountCommands/removeAccountCommand");
const accountArguments = {
    url: options_1.url,
    key: options_1.key,
    alias: options_1.alias,
};
const createAccountBuilder = (createAccountService) => yargs => {
    return yargs
        .command(listAccountCommand_1.createListAccountCommand(createAccountService))
        .command(addAccountCommand_1.createAddAccountCommand(createAccountService))
        .command(removeAccountCommand_1.createRemoveAccountCommand(createAccountService))
        .demandCommand()
        .recommendCommands()
        .help();
};
const handler = () => __awaiter(void 0, void 0, void 0, function* () { });
exports.createAccountCommand = (createAccountService) => ({
    command: 'account',
    aliases: ['alias', 'user'],
    describe: 'Manage your saved account aliases.',
    builder: createAccountBuilder(createAccountService),
    handler,
});
//# sourceMappingURL=accountCommand.js.map