import { CommandModule } from 'yargs';
import { CreateBuildServiceFn } from '../services/buildService';
import type { CLIArguments, InferArgumentsIn, InferArgumentsOut } from '../types';
export declare const buildArguments: {
    src: {
        type: "string";
        default: string;
        description: string;
    };
    out: {
        type: "string";
        default: string;
        description: string;
    };
    clean: {
        type: "boolean";
        default: boolean;
        description: string;
    };
    include: {
        type: "string";
        default: string;
        description: string;
    };
    exclude: {
        type: "string";
        description: string;
        default: string;
        coerce: (excl: string | string[]) => string[];
    };
};
export declare type BuildConfig = InferArgumentsIn<typeof buildArguments>;
export declare type BuildArguments = InferArgumentsOut<typeof buildArguments>;
export declare const argvToBuildArgs: (argv: CLIArguments<BuildArguments>) => {
    src: string;
    out: string;
    options: {
        exclude: string[];
        include: string;
        clean: boolean;
    };
};
export declare const createBuildCommand: (createBuildService: CreateBuildServiceFn) => CommandModule;
//# sourceMappingURL=buildCommand.d.ts.map