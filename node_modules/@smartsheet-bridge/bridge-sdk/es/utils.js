import createInstance, { isBridgeHTTPInstance } from './http/createInstance';
export const parseAccountURL = (accountURL) => {
    if (!accountURL.startsWith('http')) {
        accountURL = `https://${accountURL}`;
    }
    const url = new URL(accountURL);
    const [accountName, ...rest] = url.host.split('.');
    const hostName = rest.join('.');
    const protocol = url.protocol.slice(0, -1);
    return {
        accountName,
        hostName,
        protocol,
    };
};
export function createAPICall(fn) {
    return (...args) => {
        if (isBridgeHTTPInstance(args[0])) {
            return fn(args[0]);
        }
        else {
            const [config, data] = args.reverse();
            const instance = createInstance(config);
            return fn(instance)(data);
        }
    };
}
export const createAPIModule = (fns) => {
    const keys = Object.keys(fns);
    return (instance) => keys.reduce((map, key) => (Object.assign(Object.assign({}, map), { [key]: fns[key](instance) })), {});
};
//# sourceMappingURL=utils.js.map