import { createAPICall, createAPIModule } from '../utils';
export const caller = createAPICall((instance) => ({ extensionUUID }, config) => instance.post(`plugins/remote/${extensionUUID}/token`, undefined, config));
export const revoke = createAPICall((instance) => ({ extensionUUID, force = false }, config = {}) => instance.delete(`plugins/remote/${extensionUUID}`, Object.assign(Object.assign({}, config), { params: Object.assign(Object.assign({}, config.params), { force }) })));
export const uploadSpec = createAPICall((instance) => ({ data }, config) => instance.post(`plugins/remote`, data, config));
export const activateRevision = createAPICall((instance) => ({ extensionUUID, revision }, config = {}) => instance.put(`plugins/remote/${extensionUUID}?activate=${revision}`, {}, Object.assign(Object.assign({}, config), { params: Object.assign(Object.assign({}, config.params), { activate: revision }) })));
export default createAPIModule({
    caller,
    revoke,
    uploadSpec,
    activateRevision,
});
//# sourceMappingURL=extension.js.map