import Axios from 'axios';
export const isBridgeHTTPInstance = (maybe) => typeof maybe === 'function' &&
    maybe.defaults !== undefined &&
    maybe.interceptors !== undefined &&
    maybe.getUri !== undefined &&
    maybe.request !== undefined &&
    maybe.get !== undefined &&
    maybe.delete !== undefined &&
    maybe.head !== undefined &&
    maybe.options !== undefined &&
    maybe.post !== undefined &&
    maybe.put !== undefined &&
    maybe.patch !== undefined;
export default (configOrInstance = {}) => {
    const instance = isBridgeHTTPInstance(configOrInstance)
        ? configOrInstance
        : Axios.create(configOrInstance);
    instance.interceptors.request.use((config) => {
        config.headers = config.headers || [];
        if (instance.defaults.token || config.token) {
            config.headers['X-CONVERSE-TOKEN'] =
                instance.defaults.token || config.token;
        }
        if (instance.defaults.workspace || config.workspace) {
            config.headers['X-CONVERSE-SPACE'] =
                instance.defaults.workspace || config.workspace;
        }
        return config;
    });
    return instance;
};
//# sourceMappingURL=createInstance.js.map