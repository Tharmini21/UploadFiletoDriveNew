import { createAPICall, createAPIModule } from '../utils';
import createQuery from './createQuery';
export var WorkflowRunState;
(function (WorkflowRunState) {
    WorkflowRunState[WorkflowRunState["IN_PROGRESS"] = 0] = "IN_PROGRESS";
    WorkflowRunState[WorkflowRunState["AWAITING_USER_INPUT"] = 1] = "AWAITING_USER_INPUT";
    WorkflowRunState[WorkflowRunState["AWAITING_ADMIN_INPUT"] = 2] = "AWAITING_ADMIN_INPUT";
    WorkflowRunState[WorkflowRunState["ON_HOLD"] = 3] = "ON_HOLD";
    WorkflowRunState[WorkflowRunState["STOPPED"] = 4] = "STOPPED";
    WorkflowRunState[WorkflowRunState["DONE"] = 5] = "DONE";
})(WorkflowRunState || (WorkflowRunState = {}));
const queryRun = createQuery('conversation');
export const query = createAPICall((instance) => (q, config) => queryRun(instance)(q, config));
export const fetch = createAPICall((instance) => ({ requestUUID, objectUUID, }, config) => instance.get(`request/${requestUUID}/conversation/${objectUUID}`, config));
export default createAPIModule({
    query,
    fetch,
});
//# sourceMappingURL=workflowRun.js.map