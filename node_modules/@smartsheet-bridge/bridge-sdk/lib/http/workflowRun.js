"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const createQuery_1 = __importDefault(require("./createQuery"));
var WorkflowRunState;
(function (WorkflowRunState) {
    WorkflowRunState[WorkflowRunState["IN_PROGRESS"] = 0] = "IN_PROGRESS";
    WorkflowRunState[WorkflowRunState["AWAITING_USER_INPUT"] = 1] = "AWAITING_USER_INPUT";
    WorkflowRunState[WorkflowRunState["AWAITING_ADMIN_INPUT"] = 2] = "AWAITING_ADMIN_INPUT";
    WorkflowRunState[WorkflowRunState["ON_HOLD"] = 3] = "ON_HOLD";
    WorkflowRunState[WorkflowRunState["STOPPED"] = 4] = "STOPPED";
    WorkflowRunState[WorkflowRunState["DONE"] = 5] = "DONE";
})(WorkflowRunState = exports.WorkflowRunState || (exports.WorkflowRunState = {}));
const queryRun = createQuery_1.default('conversation');
exports.query = utils_1.createAPICall((instance) => (q, config) => queryRun(instance)(q, config));
exports.fetch = utils_1.createAPICall((instance) => ({ requestUUID, objectUUID, }, config) => instance.get(`request/${requestUUID}/conversation/${objectUUID}`, config));
exports.default = utils_1.createAPIModule({
    query: exports.query,
    fetch: exports.fetch,
});
//# sourceMappingURL=workflowRun.js.map