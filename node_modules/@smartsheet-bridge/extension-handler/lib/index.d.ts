import { ExternalsConfig } from './handlers/handleExternals';
import { ModulesConfig } from './handlers/handleModules';
import { HandleOAuth2CodeConfig } from './handlers/handleOAuth2HandleCode';
import { OAuth2RenewTokenConfig } from './handlers/handleOAuth2RenewToken';
import { OAuth2StartConfig } from './handlers/handleOAuthStart';
import { RegisterConfig } from './handlers/handleRegister';
import { UnregisterConfig } from './handlers/handleUnregister';
export { ErrorResponse, ExtensionResponse, ExtensionStatus, SerializableArray, SerializableObject, SerializablePrimitive, SerializableValue, serialize, } from '@smartsheet-extensions/handler';
export { ExternalFunction, ExternalsConfig, handleExternals, } from './handlers/handleExternals';
export { handleModules, ModuleFunction, ModulesConfig, } from './handlers/handleModules';
export { HandleOAuth2CodeConfig, HandleOAuth2CodeFunction, handleOAuth2HandleCode, } from './handlers/handleOAuth2HandleCode';
export { handleOAuth2RenewToken, OAuth2RenewTokenConfig, RenewOAuth2TokenFunction, } from './handlers/handleOAuth2RenewToken';
export { handleOAuth2Start, OAuth2StartConfig, StartOAuth2Function, } from './handlers/handleOAuthStart';
export { handleRegister, RegisterConfig, RegisterFunction, } from './handlers/handleRegister';
export { handleUnregister, UnregisterConfig, } from './handlers/handleUnregister';
export * from './responses';
export declare type BridgeConfiguration = RegisterConfig & UnregisterConfig & ModulesConfig & ExternalsConfig & OAuth2StartConfig & HandleOAuth2CodeConfig & OAuth2RenewTokenConfig;
export declare const createBridgeHandler: (config: BridgeConfiguration) => import("@smartsheet-extensions/handler").ExtensionHTTPHandler;
//# sourceMappingURL=index.d.ts.map