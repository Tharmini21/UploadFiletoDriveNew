import { SerializableClass, SerializableObject } from '@smartsheet-extensions/handler';
export interface BridgeChannelSettings {
    userId: string;
    threadId?: string;
    runtimeData?: SerializableObject;
}
export declare class BridgeChannelSettings implements SerializableClass {
    /**
     * The unique identifier for the Bridge user.
     */
    userId: string;
    /**
     * The unique identifier for the Bridge thread.
     */
    threadId?: string;
    /**
     * Additional data that is passed to the next workflow but is not persisted.
     *
     * This is used if the extension requires unique data in order to respond or process which
     * should not, or is pointless, to persist.
     */
    runtimeData?: SerializableObject;
    static create(props?: Partial<BridgeChannelSettings>): BridgeChannelSettings;
    constructor({ userId, threadId, runtimeData, }?: Partial<BridgeChannelSettings>);
    /**
     * Sets the unique identifier for the Bridge user.
     * @param threadId the unique identifier for the Bridge user.
     */
    setUserID(userId: string): void;
    /**
     * Sets the unique identifier for the Bridge thread.
     * @param threadId the unique identifier for the Bridge thread.
     */
    setThreadId(threadId: string): void;
    /**
     * Sets the user runtime data.
     *
     * Additional data that is passed to the next workflow but is not persisted.
     * @param runtimeData user runtime data.
     */
    setRuntimeData(runtimeData: SerializableObject): void;
    toSerializableObject(): SerializableObject;
}
//# sourceMappingURL=BridgeChannelSettings.d.ts.map