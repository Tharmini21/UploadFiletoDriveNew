export interface OAuth2SetupData {
    oauth2URI: string;
    clientId: string;
    scope?: string;
    state?: string;
    comment?: string;
    extraParams?: Record<string, string>;
}
export declare class OAuth2SetupData {
    oauth2URI: string;
    clientId: string;
    scope?: string;
    state?: string;
    comment?: string;
    extraParams?: Record<string, string>;
    static create(props?: Partial<OAuth2SetupData>): OAuth2SetupData;
    constructor({ oauth2URI, clientId, scope, state, comment, extraParams, }?: Partial<OAuth2SetupData>);
    /**
     * Sets the OAuth2 URI.
     * @param oauth2URI the OAuth2 URI.
     */
    setOAuth2URI(oauth2URI: string): void;
    /**
     * Sets the OAuth app client Id.he OAuth app client Id
     * @param clientId the OAuth app client Id.
     */
    setClientId(clientId: string): void;
    /**
     * Sets the OAuth scope.
     * @param scope the OAuth scope.
     */
    setScope(scope: string): void;
    /**
     * Sets the OAuth state.
     * @param state the OAuth state.
     */
    setState(state: string): void;
    /**
     * Sets a comment to display with the generated link.
     * @param comment an optional comment to display with link.
     */
    setComment(comment: string): void;
    /**
     * Sets additional parameters to be included in the OAuth2 request.
     * @param extraParams additional parameters to be included in the OAuth2 request.
     */
    setExtraParams(extraParams: Record<string, string>): void;
}
//# sourceMappingURL=OAuth2SetupData.d.ts.map