"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestartWorkflowChannelMessage = void 0;
class RestartWorkflowChannelMessage {
    constructor({ uid, workflowRunID, stateValues, runtimeData, } = {}) {
        if (uid)
            this.setUid(uid);
        if (workflowRunID)
            this.workflowRunID = workflowRunID;
        if (stateValues)
            this.stateValues = stateValues;
        if (runtimeData)
            this.runtimeData = runtimeData;
    }
    static create(props = {}) {
        return new RestartWorkflowChannelMessage(props);
    }
    /**
     * Sets the unique identifier for the channel message.
     * @param uid the unique identifier for the channel message.
     */
    setUid(uid) {
        this.uid = uid;
    }
    /**
     * Set the identifier for the workflow run to restart.
     * @param workflowRunID the identifier for the workflow run.
     */
    setWorkflowRunId(workflowRunID) {
        this.workflowRunID = workflowRunID;
    }
    /**
     * Sets the state values to set on the workflow run.
     * @param stateValues the state values to set.
     */
    setStateValues(stateValues) {
        this.stateValues = stateValues;
    }
    /**
     * Sets runtime data that will be passed to the workflow run when it is executed.
     * @param runtimeData the runtime data to send to the workflow run.
     */
    setRuntimeData(runtimeData) {
        this.runtimeData = runtimeData;
    }
    toSerializableObject() {
        // kinda pointless with this class but each ChannelMessage needs to implement this interface
        return {
            uid: this.uid,
            conversation: {
                existing: this.workflowRunID,
                entityData: this.stateValues,
                runtimeCTX: this.runtimeData,
            },
        };
    }
}
exports.RestartWorkflowChannelMessage = RestartWorkflowChannelMessage;
//# sourceMappingURL=RestartWorkflowChannelMessage.js.map