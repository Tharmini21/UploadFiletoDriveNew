import { ExtensionResponse, SerializableClass, SerializableObject } from '@smartsheet-extensions/handler';
import { ChannelOutput } from '../models/ChannelOutput';
import { HttpResponse } from '../models/HttpResponse';
import { AbstractResponse } from './AbstractResponse';
export interface ExternalResponse extends ExtensionResponse {
    channelOutput: ChannelOutput[];
    httpResponse: HttpResponse;
}
export declare class ExternalResponse extends AbstractResponse implements SerializableClass {
    /**
     * The HTTP Response data to the originating HTTP request.
     */
    httpResponse: HttpResponse;
    /**
     * The channel output for the response.
     */
    channelOutput: ChannelOutput[];
    static create(props?: Partial<ExternalResponse>): ExternalResponse;
    constructor({ httpResponse, channelOutput, status, }?: Partial<ExternalResponse>);
    /**
     * Sets the HTTP response data for the challenge response.
     * @param httpResponse the HTTP response data.
     */
    setHTTPResponse(httpResponse: Pick<HttpResponse, 'body' | 'headers' | 'httpStatus'>): void;
    /**
     * Sets the channel output for the response.
     * @param channelOutput An array of channel output definitions.
     */
    setChannelOutput(channelOutput: ChannelOutput[]): void;
    /**
     * Adds one or more channel outputs to the response.
     * @param channelOutput One or more channel output definitions.
     */
    addChannelOutput(...channelOutput: Partial<ChannelOutput>[]): void;
    toSerializableObject(): SerializableObject;
}
//# sourceMappingURL=ExternalResponse.d.ts.map