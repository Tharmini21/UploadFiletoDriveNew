"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModuleResponse = void 0;
const handler_1 = require("@smartsheet-extensions/handler");
const AbstractResponse_1 = require("./AbstractResponse");
class ModuleResponse extends AbstractResponse_1.AbstractResponse {
    constructor({ value, exit, status } = {}) {
        super(status);
        this.setValue(value);
        this.setExit(exit);
    }
    static create(props = {}) {
        return new ModuleResponse(props);
    }
    /**
     * Sets the return value for the response.
     * @param value a serializable object to be returned.
     */
    setValue(value) {
        if (!handler_1.isSerializableEmpty(value) && !handler_1.isSerializableObject(value)) {
            throw new handler_1.InternalError(`\`value\` must be of type \`SerializableObject\`. Received \`${typeof value}\`.`);
        }
        this.value = value;
    }
    /**
     * Sets the exit id for the response.
     * @param exit an ID of the next exit path.
     */
    setExit(exit) {
        if (exit !== undefined && typeof exit !== 'string') {
            throw new handler_1.InternalError(`\`exit\` must be of type \`string\`. Received \`${typeof exit}\`.`);
        }
        this.exit = exit;
    }
    /**
     * Sets the number of seconds that the workflow should be paused.
     * @param suspendTime a positive number of whole seconds to suspend the workflow.
     */
    setSuspendTime(suspendTime) {
        if (suspendTime !== undefined && typeof suspendTime !== 'number') {
            throw new handler_1.InternalError(`\`suspendTime\` must be of type \`number\`. Received \`${typeof suspendTime}\`.`);
        }
        this.suspendTime = suspendTime;
    }
}
exports.ModuleResponse = ModuleResponse;
//# sourceMappingURL=ModuleResponse.js.map