import { ExtensionResponse, SerializableEmpty, SerializableObject } from '@smartsheet-extensions/handler';
import { AbstractResponse } from './AbstractResponse';
export interface ModuleResponse extends ExtensionResponse {
    value?: SerializableObject | SerializableEmpty;
    exit?: string;
    suspendTime?: number;
}
export declare class ModuleResponse extends AbstractResponse {
    /**
     * The returned value of the module.
     */
    value?: SerializableObject | SerializableEmpty;
    /**
     * The string ID of the next exit path.
     */
    exit?: string;
    /**
     * The number of seconds the workflow run should pause
     * before either retrying the module or continuing the workflow run
     */
    suspendTime?: number;
    static create(props?: Partial<ModuleResponse>): ModuleResponse;
    constructor({ value, exit, status }?: Partial<ModuleResponse>);
    /**
     * Sets the return value for the response.
     * @param value a serializable object to be returned.
     */
    setValue(value?: SerializableObject): void;
    /**
     * Sets the exit id for the response.
     * @param exit an ID of the next exit path.
     */
    setExit(exit?: string): void;
    /**
     * Sets the number of seconds that the workflow should be paused.
     * @param suspendTime a positive number of whole seconds to suspend the workflow.
     */
    setSuspendTime(suspendTime?: number): void;
}
//# sourceMappingURL=ModuleResponse.d.ts.map