import { ExtensionHandlerEnhancer, SerializableObject } from '@smartsheet-extensions/handler';
import { Caller } from '../models/Caller';
import { OAuth2Data } from '../models/OAuth2Data';
import { ExternalResponse } from '../responses/ExternalResponse';
import { BridgeContext, BridgeFunction } from '../types';
export declare type ExternalFunction<Settings extends SerializableObject = SerializableObject> = BridgeFunction<ExternalResponse, ExternalParams, ExternalContext<Settings>>;
export interface ExternalContext<Settings extends SerializableObject = SerializableObject> extends BridgeContext<Settings> {
}
export interface ExternalsConfig {
    externals?: {
        [externalId: string]: ExternalFunction;
    };
}
export interface ExternalParams extends SerializableObject {
    bodyData: SerializableObject;
    formData?: Record<string, string[]>;
    inboundHeaders: Record<string, string>;
    method: 'POST' | 'GET' | 'PUT' | 'DELETE';
    queryParam?: Record<string, string[]>;
}
export declare const EXTERNAL_CALL = "EXTERNAL_CALL";
export interface ExternalPayload {
    event: typeof EXTERNAL_CALL;
    caller: Caller;
    payload: {
        providerOAuth?: OAuth2Data;
        call: string;
        registrationData: SerializableObject;
        bodyData: SerializableObject;
        formData?: Record<string, string[]>;
        inboundHeaders: Record<string, string>;
        method: 'POST' | 'GET' | 'PUT' | 'DELETE';
        queryParam?: Record<string, string[]>;
    };
}
export declare const handleExternals: (config: ExternalsConfig) => ExtensionHandlerEnhancer;
//# sourceMappingURL=handleExternals.d.ts.map