"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleRegister = exports.PLUGIN_REGISTER = void 0;
const handler_1 = require("@smartsheet-extensions/handler");
const BadRegisterResponseError_1 = require("../errors/BadRegisterResponseError");
const RegisterResponse_1 = require("../responses/RegisterResponse");
exports.PLUGIN_REGISTER = 'PLUGIN_REGISTER';
const isRegisterPayload = (payload) => payload.event === exports.PLUGIN_REGISTER;
exports.handleRegister = (config) => create => () => {
    const next = create();
    return (body, callback) => {
        if (isRegisterPayload(body) && typeof config.onRegister === 'function') {
            const settings = (body.payload && body.payload.registrationData) || {};
            const { caller } = body;
            const { externalURI, inboundURI, webhookURI, providerOAuth } = body.payload || {};
            next(config.onRegister(settings, {
                caller,
                settings,
                externalURI,
                inboundURI,
                webhookURI,
                oAuthData: providerOAuth,
            }), (err, result) => {
                if (err) {
                    callback(err);
                }
                else if (result instanceof RegisterResponse_1.RegisterResponse) {
                    callback(err, result);
                }
                else if (handler_1.isSerializableObject(result)) {
                    callback(err, RegisterResponse_1.RegisterResponse.create(result));
                }
                else if (result === null) {
                    throw new BadRegisterResponseError_1.BadRegisterResponseError('null');
                }
                else {
                    throw new BadRegisterResponseError_1.BadRegisterResponseError(typeof result);
                }
            });
        }
        else {
            next(body, callback);
        }
    };
};
//# sourceMappingURL=handleRegister.js.map