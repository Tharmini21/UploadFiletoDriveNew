import { ExtensionHandlerEnhancer, SerializableObject } from '@smartsheet-extensions/handler';
import { Caller } from '../models/Caller';
import { OAuth2Data } from '../models/OAuth2Data';
import { RegisterResponse } from '../responses/RegisterResponse';
import { BridgeContext, BridgeFunction } from '../types';
export interface RegisterContext<Settings extends SerializableObject = SerializableObject> extends BridgeContext<Settings> {
    externalURI?: Record<string, string>;
    inboundURI?: string;
    webhookURI?: Record<string, string>;
}
export declare type RegisterFunction<Settings extends SerializableObject = SerializableObject> = BridgeFunction<RegisterResponse<Settings>, Settings, RegisterContext<Settings>>;
export interface RegisterConfig {
    onRegister?: RegisterFunction;
}
export declare const PLUGIN_REGISTER = "PLUGIN_REGISTER";
export interface RegisterPayload {
    event: typeof PLUGIN_REGISTER;
    caller: Caller;
    payload: {
        providerOAuth?: OAuth2Data;
        externalURI?: Record<string, string>;
        inboundURI?: string;
        registrationData: SerializableObject;
        webhookURI?: Record<string, string>;
    };
}
export declare const handleRegister: (config: RegisterConfig) => ExtensionHandlerEnhancer;
//# sourceMappingURL=handleRegister.d.ts.map