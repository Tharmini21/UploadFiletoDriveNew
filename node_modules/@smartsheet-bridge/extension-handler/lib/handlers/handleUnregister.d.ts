import { ExtensionHandlerEnhancer, SerializableObject } from '@smartsheet-extensions/handler';
import { Caller } from '../models/Caller';
import { OAuth2Data } from '../models/OAuth2Data';
import { AbstractResponse } from '../responses/AbstractResponse';
import { BridgeContext, BridgeFunction } from '../types';
export declare type UnregisterFunction<Settings extends SerializableObject = SerializableObject> = BridgeFunction<AbstractResponse, Settings, UnregisterContext<Settings>>;
export interface UnregisterConfig {
    onUnregister?: UnregisterFunction;
}
export interface UnregisterContext<Settings extends SerializableObject = SerializableObject> extends BridgeContext<Settings> {
    externalURI?: Record<string, string>;
    inboundURI?: string;
    webhookURI?: Record<string, string>;
}
export declare const PLUGIN_UNREGISTER = "PLUGIN_UNREGISTER";
export interface UnregisterPayload {
    event: typeof PLUGIN_UNREGISTER;
    caller: Caller;
    payload: {
        providerOAuth?: OAuth2Data;
        externalURI?: Record<string, string>;
        inboundURI?: string;
        registrationData: SerializableObject;
        webhookURI?: Record<string, string>;
    };
}
export declare const handleUnregister: (config: UnregisterConfig) => ExtensionHandlerEnhancer;
//# sourceMappingURL=handleUnregister.d.ts.map