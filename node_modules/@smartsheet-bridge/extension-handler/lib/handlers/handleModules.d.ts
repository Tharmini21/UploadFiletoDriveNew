import { ExtensionHandlerEnhancer, SerializableObject } from '@smartsheet-extensions/handler';
import { Caller } from '../models/Caller';
import { ExternalChannelSettings } from '../models/ExternalChannelSettings';
import { OAuth2Data } from '../models/OAuth2Data';
import { WorkflowRun } from '../models/WorkflowRun';
import { ModuleResponse } from '../responses/ModuleResponse';
import { BridgeContext, BridgeFunction } from '../types';
export declare type ModuleFunction<Params extends SerializableObject = SerializableObject, Settings extends SerializableObject = SerializableObject> = BridgeFunction<ModuleResponse, Params, ModuleContext<Settings>>;
export interface ModuleContext<Settings extends SerializableObject = SerializableObject> extends BridgeContext<Settings> {
    channelSettings?: Readonly<ExternalChannelSettings>;
    retryCount: number;
    workflowRun: Readonly<WorkflowRun>;
}
export interface ModulesConfig {
    modules?: {
        [moduleId: string]: ModuleFunction;
    };
}
export declare const MODULE_EXEC = "MODULE_EXEC";
export interface ModulePayload {
    event: typeof MODULE_EXEC;
    caller: Caller;
    payload: {
        invokerOAuth?: OAuth2Data;
        providerOAuth?: OAuth2Data;
        conversation: SerializableObject;
        channelSetting?: SerializableObject;
        moduleId: string;
        moduleParam: SerializableObject;
        registrationData: SerializableObject;
        retryCount?: number;
    };
}
export declare const handleModules: (config: ModulesConfig) => ExtensionHandlerEnhancer;
//# sourceMappingURL=handleModules.d.ts.map