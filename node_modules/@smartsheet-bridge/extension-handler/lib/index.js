"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createBridgeHandler = exports.handleUnregister = exports.handleRegister = exports.handleOAuth2Start = exports.handleOAuth2RenewToken = exports.handleOAuth2HandleCode = exports.handleModules = exports.handleExternals = exports.serialize = exports.ExtensionStatus = void 0;
const handler_1 = require("@smartsheet-extensions/handler");
const handleExternals_1 = require("./handlers/handleExternals");
const handleModules_1 = require("./handlers/handleModules");
const handleOAuth2HandleCode_1 = require("./handlers/handleOAuth2HandleCode");
const handleOAuth2RenewToken_1 = require("./handlers/handleOAuth2RenewToken");
const handleOAuthStart_1 = require("./handlers/handleOAuthStart");
const handleRegister_1 = require("./handlers/handleRegister");
const handleUnregister_1 = require("./handlers/handleUnregister");
var handler_2 = require("@smartsheet-extensions/handler");
Object.defineProperty(exports, "ExtensionStatus", { enumerable: true, get: function () { return handler_2.ExtensionStatus; } });
Object.defineProperty(exports, "serialize", { enumerable: true, get: function () { return handler_2.serialize; } });
var handleExternals_2 = require("./handlers/handleExternals");
Object.defineProperty(exports, "handleExternals", { enumerable: true, get: function () { return handleExternals_2.handleExternals; } });
var handleModules_2 = require("./handlers/handleModules");
Object.defineProperty(exports, "handleModules", { enumerable: true, get: function () { return handleModules_2.handleModules; } });
var handleOAuth2HandleCode_2 = require("./handlers/handleOAuth2HandleCode");
Object.defineProperty(exports, "handleOAuth2HandleCode", { enumerable: true, get: function () { return handleOAuth2HandleCode_2.handleOAuth2HandleCode; } });
var handleOAuth2RenewToken_2 = require("./handlers/handleOAuth2RenewToken");
Object.defineProperty(exports, "handleOAuth2RenewToken", { enumerable: true, get: function () { return handleOAuth2RenewToken_2.handleOAuth2RenewToken; } });
var handleOAuthStart_2 = require("./handlers/handleOAuthStart");
Object.defineProperty(exports, "handleOAuth2Start", { enumerable: true, get: function () { return handleOAuthStart_2.handleOAuth2Start; } });
var handleRegister_2 = require("./handlers/handleRegister");
Object.defineProperty(exports, "handleRegister", { enumerable: true, get: function () { return handleRegister_2.handleRegister; } });
var handleUnregister_2 = require("./handlers/handleUnregister");
Object.defineProperty(exports, "handleUnregister", { enumerable: true, get: function () { return handleUnregister_2.handleUnregister; } });
__exportStar(require("./responses"), exports);
exports.createBridgeHandler = (config) => {
    const payloadHandler = handler_1.xorHandler({
        PING: handler_1.handlePing(),
        [handleOAuthStart_1.OAUTH2_START]: handleOAuthStart_1.handleOAuth2Start(config),
        [handleOAuth2HandleCode_1.OAUTH2_HANDLE_CODE]: handleOAuth2HandleCode_1.handleOAuth2HandleCode(config),
        [handleOAuth2RenewToken_1.OAUTH2_RENEW_TOKEN]: handleOAuth2RenewToken_1.handleOAuth2RenewToken(config),
        [handleRegister_1.PLUGIN_REGISTER]: handleRegister_1.handleRegister(config),
        [handleUnregister_1.PLUGIN_UNREGISTER]: handleUnregister_1.handleUnregister(config),
        [handleModules_1.MODULE_EXEC]: handleModules_1.handleModules(config),
        [handleExternals_1.EXTERNAL_CALL]: handleExternals_1.handleExternals(config),
    });
    const enhancer = handler_1.compose(handler_1.httpTransport, handler_1.toSerializableObject, handler_1.handleHasProperty('event'), payloadHandler, handler_1.handlePromises, handler_1.handleThunks);
    return handler_1.createExtensionHandler(enhancer);
};
//# sourceMappingURL=index.js.map