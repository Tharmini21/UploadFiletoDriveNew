import { ExtensionHandlerCallback, ExtensionHandlerEnhancer } from '../handler';
export declare type HandlePayloadFunctions = (payload: any, callback: ExtensionHandlerCallback) => void;
export interface HandlePayloadFunctionsConfig {
    getFunctionKey: (payload: any) => string;
}
/**
 * This handler will call one and only one enhancer based on the payload key.
 * It acts as an exclusive OR, or switch statment.
 * @param enhancers a key value map where the key is a string and the value is an enhancer.
 * @param options
 */
export declare const xorHandler: <EventMap extends Record<string, ExtensionHandlerEnhancer<import("../handler").DefaultExtensionHandler, import("../handler").DefaultExtensionHandler>>>(enhancers: EventMap, options?: HandlePayloadFunctionsConfig) => ExtensionHandlerEnhancer;
//# sourceMappingURL=xorHandler.d.ts.map