"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleThunks = void 0;
/**
 * This handler will call a returned function with the callback as a
 * parameter allowing handlers greater control of when to respond to the
 * caller.
 *
 * @example
 * ```
 * // index.js
 * return createExtensibleHandler(handleThunks)
 *
 * // handler.js
 * return () => respond => {
 *   // execute before handler responds
 *   respond();
 *   // execute after handler responds
 * }
 * ```
 */
exports.handleThunks = create => () => {
    const handler = create();
    return (body, callback) => {
        handler(body, (err, resultOrThunk) => {
            if (typeof resultOrThunk === 'function') {
                resultOrThunk((result) => callback(err, result));
            }
            else {
                callback(err, resultOrThunk);
            }
        });
    };
};
//# sourceMappingURL=handleThunks.js.map