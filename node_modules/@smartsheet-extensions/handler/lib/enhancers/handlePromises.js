"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handlePromises = void 0;
/**
 * This handler will take a returned Promise and wait for it
 * to resolve before returning the resolved data.
 *
 * @example
 * ```
 * // index.js
 * return createExtensibleHandler(handlePromises)
 *
 * // handler.js
 * return () => new Promise(resolve => {
 *   setTimeout(() => {
 *     resolve('Hello,World!')
 *   }, 1000);
 * });
 * ```
 */
exports.handlePromises = create => () => {
    const handler = create();
    return (body, callback) => {
        handler(body, (err, resultOrPromise) => {
            Promise.resolve(resultOrPromise)
                .then(result => callback(err, result))
                .catch(callback);
        });
    };
};
//# sourceMappingURL=handlePromises.js.map