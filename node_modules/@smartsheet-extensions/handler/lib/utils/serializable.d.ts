export declare type SerializableEmpty = null | undefined;
export declare type SerializablePrimitive = string | number | boolean;
export interface SerializableObject extends Record<string, SerializableValue> {
    [member: string]: SerializableValue;
}
export declare type SerializableArray = Array<SerializableValue>;
export declare type SerializableValue = SerializableEmpty | SerializablePrimitive | SerializableObject | SerializableArray;
export declare const isSerializableEmpty: (o: unknown) => o is null;
export declare const isSerializablePrimitive: (o: unknown) => o is SerializablePrimitive;
export declare const isSerializableArray: (o: unknown) => o is SerializableArray;
export declare const isSerializableObject: (o: unknown) => o is SerializableObject;
export declare const isSerializable: (o: unknown) => o is SerializableValue;
export interface SerializableClass {
    toSerializableObject: () => SerializableObject;
}
export declare const isSerializableClass: (o: unknown) => o is SerializableClass;
export declare const serialize: (o: unknown) => SerializableValue;
export declare const serializeArray: (a: any[]) => SerializableArray;
export declare const serializeObject: (o: object) => SerializableObject;
//# sourceMappingURL=serializable.d.ts.map